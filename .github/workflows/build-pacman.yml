# .github/workflows/build-pacman.yml

name: Build & Publish Pacman Repo

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

env:
  PKGBASE: linux-custom-test
  REPO_BRANCH: gh-pages

permissions:
  contents: write

jobs:

  build:
    name: Build kernel package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build & validate PKGBUILD
        uses: heyhusen/archlinux-package-action@v2
        with:
          path: .
          flags: '-s --noconfirm'
          updpkgsums: true
          srcinfo: true
          namcap: false

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: pkgs
          path: '*.pkg.tar.zst'

  publish:
    name: Publish Pacman repo on gh-pages
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Disable safe.directory checks
        run: git config --global --add safe.directory '*'

      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git user
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages branch exists
        run: |
          if git ls-remote --exit-code origin $REPO_BRANCH; then
            git checkout $REPO_BRANCH
          else
            git checkout --orphan $REPO_BRANCH
            git rm -rf .
            git commit --allow-empty -m "Init $REPO_BRANCH"
            git push origin $REPO_BRANCH
            git checkout $REPO_BRANCH
          fi

      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: pkgs
          path: repo

      - name: Organize repository layout
        run: |
          mkdir -p repo/x86_64
          mv repo/*.pkg.tar.zst repo/x86_64/

      - name: Update Pacman database in Docker
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/repo":/repo \
            -w /repo \
            archlinux:latest \
            sh -c '
              pacman-key --init &&
              pacman-key --populate archlinux &&
              pacman -Sy --noconfirm pacman-contrib &&
              repo-add ${PKGBASE}.db.tar.gz x86_64/*.pkg.tar.zst
            '

      - name: Commit & push to gh-pages
        run: |
          git add repo/
          git commit -m "repo: add ${PKGBASE} v${{ needs.build.outputs.pkgver }}-r${{ needs.build.outputs.pkgrel }}"
          git push origin $REPO_BRANCH
