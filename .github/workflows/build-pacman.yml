# .github/workflows/build-pacman.yml

name: Sync, Build & Publish Pacman Repo

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

env:
  PKGBASE: linux-custom-test
  REPO_BRANCH: gh-pages

permissions:
  contents: write

jobs:

  sync:
    name: Sync PKGBUILD â†’ Upstream Linux v6.12.x
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get_tag.outputs.latest }}
      bumped:      ${{ steps.bumped.outputs.bumped }}
    steps:
      - uses: actions/checkout@v4

      - name: Fetch latest v6.12.x tag
        id: get_tag
        run: |
          latest=$(git ls-remote --tags --refs \
            https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git \
            | grep -E 'refs/tags/v6\.12\.[0-9]+$' \
            | sed 's|.*/v||' | sort -V | tail -1)
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: Read current pkgver
        id: get_pkgver
        run: |
          current=$(grep '^pkgver=' PKGBUILD | cut -d= -f2)
          echo "current=$current" >> $GITHUB_OUTPUT

      - name: Bump pkgver/pkgtag & reset pkgrel
        id: bumped
        run: |
          if [[ "${{ steps.get_tag.outputs.latest }}" != "${{ steps.get_pkgver.outputs.current }}" ]]; then
            sed -i "s/^pkgver=.*/pkgver=${{ steps.get_tag.outputs.latest }}/" PKGBUILD
            sed -i "s/^pkgrel=.*/pkgrel=1/"                          PKGBUILD
            sed -i "s/^_tag=.*/_tag=${{ steps.get_tag.outputs.latest }}/"  PKGBUILD
            echo "bumped=true" >> $GITHUB_OUTPUT
          else
            echo "bumped=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit sync changes
        if: steps.bumped.outputs.bumped == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          message: "ci: sync to Linux v${{ steps.get_tag.outputs.latest }}"
          add: PKGBUILD

  build:
    name: Build kernel package
    needs: sync
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build & validate PKGBUILD
        uses: heyhusen/archlinux-package-action@v2
        with:
          path: .
          flags: '-s --noconfirm'
          updpkgsums: true
          srcinfo: true
          namcap: false

      - name: Debug: list workspace
        run: ls -R .

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pkgs
          path: '**/*.pkg.tar.zst'

  publish:
    name: Publish Pacman repo on gh-pages
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Disable safe.directory checks
        run: git config --global --add safe.directory '*'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git user
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages branch exists
        run: |
          if git ls-remote --exit-code origin $REPO_BRANCH; then
            git checkout $REPO_BRANCH
          else
            git checkout --orphan $REPO_BRANCH
            git rm -rf .
            git commit --allow-empty -m "Init $REPO_BRANCH"
            git push origin $REPO_BRANCH
            git checkout $REPO_BRANCH
          fi

      - uses: actions/download-artifact@v4
        with:
          name: pkgs
          path: repo

      - name: Organize repository layout
        run: |
          mkdir -p repo/x86_64
          mv repo/*.pkg.tar.zst repo/x86_64/

      - name: Update Pacman DB in Docker
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/repo":/repo \
            -w /repo \
            archlinux:latest \
            sh -c '
              pacman-key --init &&
              pacman-key --populate archlinux &&
              pacman -Sy --noconfirm pacman-contrib &&
              repo-add ${PKGBASE}.db.tar.gz x86_64/*.pkg.tar.zst
            '

      - name: Commit & push to gh-pages
        run: |
          git add repo/
          git commit -m "repo: add ${PKGBASE} v${{ needs.sync.outputs.latest_tag }}-r${{ needs.build.outputs.pkgrel }}"
          git push origin $REPO_BRANCH
