# .github/workflows/build-pacman.yml

name: Build & Publish Pacman Repo

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

permissions:
  contents: write

env:
  PKGBASE: linux-custom-test
  REPO_BRANCH: gh-pages

jobs:

  sync:
    name: Sync PKGBUILD to upstream v6.12.x
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.get_tag.outputs.latest }}
      current: ${{ steps.get_pkgver.outputs.current }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch latest 6.12.x tag
        id: get_tag
        run: |
          latest=$(git ls-remote --tags --refs \
            https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git \
            | grep -E 'refs/tags/v6\.12\.[0-9]+$' \
            | sed 's|.*/v||' \
            | sort -V \
            | tail -1)
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: Read current pkgver
        id: get_pkgver
        run: |
          current=$(grep '^pkgver=' PKGBUILD | cut -d= -f2)
          echo "current=$current" >> $GITHUB_OUTPUT

      - name: Bump pkgver & reset pkgrel
        if: ${{ steps.get_tag.outputs.latest != steps.get_pkgver.outputs.current }}
        run: |
          sed -i "s/^pkgver=.*/pkgver=${{ steps.get_tag.outputs.latest }}/" PKGBUILD
          sed -i "s/^pkgrel=.*/pkgrel=1/" PKGBUILD

      - name: Commit version bump
        if: ${{ steps.get_tag.outputs.latest != steps.get_pkgver.outputs.current }}
        uses: EndBug/add-and-commit@v9
        with:
          message: "ci: bump to Linux v${{ steps.get_tag.outputs.latest }}"
          add: PKGBUILD

  build:
    name: Build kernel packages
    needs: sync
    runs-on: ubuntu-latest
    container: archlinux:latest
    outputs:
      pkgver: ${{ steps.calc.outputs.pkgver }}
      pkgrel: ${{ steps.calc.outputs.pkgrel }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          pacman-key --init
          pacman-key --populate archlinux
          pacman -Syu --noconfirm
          pacman -S --noconfirm \
            base-devel bc cpio gettext git libelf pahole \
            perl python tar xz pacman-contrib

      - name: Create builder user
        run: |
          useradd -m builder
          echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

      - name: Copy sources into builder home
        run: |
          mkdir -p /home/builder/build
          cp -r $GITHUB_WORKSPACE/* /home/builder/build/
          chown -R builder:builder /home/builder/build

      - name: Build packages
        run: |
          sudo -u builder bash -c '
            cd /home/builder/build
            updpkgsums
            makepkg -s --noconfirm
          '

      - name: Compute pkgver & pkgrel
        id: calc
        run: |
          ver=$(grep '^pkgver=' PKGBUILD | cut -d= -f2)
          prev=$(git show HEAD~1:PKGBUILD 2>/dev/null \
                   | grep '^pkgver=' | cut -d= -f2 || echo "")
          if [[ "$ver" != "$prev" ]]; then
            rel=1
          else
            rel=$(( $(grep '^pkgrel=' PKGBUILD | cut -d= -f2) + 1 ))
          fi
          echo "pkgver=$ver" >> $GITHUB_OUTPUT
          echo "pkgrel=$rel" >> $GITHUB_OUTPUT

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp /home/builder/build/*.pkg.tar.zst artifacts/

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: pkgs
          path: artifacts/*.pkg.tar.zst

  publish:
    name: Publish to gh-pages Pacman repo
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Mark workspace safe for Git
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Ensure gh-pages branch exists
        run: |
          if git ls-remote --exit-code origin $REPO_BRANCH; then
            git checkout $REPO_BRANCH
          else
            git checkout --orphan $REPO_BRANCH
            git rm -rf .
            git commit --allow-empty -m "Init $REPO_BRANCH"
            git push origin $REPO_BRANCH
            git checkout $REPO_BRANCH
          fi

      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: pkgs
          path: repo

      - name: Organize repo structure
        run: |
          mkdir -p repo/x86_64
          mv repo/*.pkg.tar.zst repo/x86_64/

      - name: Update Pacman database (in Docker)
        run: |
          docker run --rm \
            -v $GITHUB_WORKSPACE/repo:/repo \
            -w /repo \
            archlinux:latest \
            sh -c '
              pacman-key --init &&
              pacman-key --populate archlinux &&
              pacman -Sy --noconfirm pacman-contrib &&
              repo-add ${PKGBASE}.db.tar.gz x86_64/*.pkg.tar.zst
            '

      - name: Commit & push gh-pages
        run: |
          git add repo/
          git commit -m "repo: add ${PKGBASE} v${{ needs.build.outputs.pkgver }}-r${{ needs.build.outputs.pkgrel }}"
          git push origin $REPO_BRANCH
