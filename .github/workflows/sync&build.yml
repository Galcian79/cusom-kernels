name: Build Linux Custom Test Kernel

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

permissions:
  contents: write

jobs:
  sync:
    name: Sync kernel version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get latest LTS 6.12 tag
        id: tag
        run: |
          tag=$(git ls-remote --tags --refs https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git \
            | grep 'refs/tags/v6\.12\.[0-9]\+$' \
            | sed 's|.*/v||' \
            | sort -V | tail -1)
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Read current pkgver
        id: current
        run: |
          pv=$(grep '^pkgver=' PKGBUILD | cut -d= -f2)
          echo "pkgver=$pv" >> $GITHUB_OUTPUT

      - name: Update PKGBUILD if new version
        if: ${{ steps.tag.outputs.tag != steps.current.outputs.pkgver }}
        run: |
          sed -i "s/^pkgver=.*/pkgver=${{ steps.tag.outputs.tag }}/" PKGBUILD
          sed -i "s/^pkgrel=.*/pkgrel=1/" PKGBUILD

      - name: Commit sync
        if: ${{ steps.tag.outputs.tag != steps.current.outputs.pkgver }}
        uses: EndBug/add-and-commit@v9
        with:
          message: "ci: sync to kernel ${{ steps.tag.outputs.tag }}"
          add: PKGBUILD

  build:
    name: Build kernel
    runs-on: ubuntu-latest
    container: archlinux:latest
    needs: sync
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel bc cpio gettext git libelf pahole perl python tar xz

      - name: Create builder user
        run: |
          useradd -m builder
          echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          chown -R builder:builder $GITHUB_WORKSPACE

      - name: Build with makepkg
        run: |
          sudo -u builder bash -lc "
            mkdir -p ~/build
            cp -r $GITHUB_WORKSPACE/* ~/build/
            cd ~/build
            makepkg -s --noconfirm
            mkdir -p $GITHUB_WORKSPACE/artifacts
            cp *.pkg.tar.zst $GITHUB_WORKSPACE/artifacts/"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-packages
          path: artifacts/*.pkg.tar.zst

  bump:
    name: Bump pkgrel if rebuilt
    runs-on: ubuntu-latest
    needs: build

    outputs:
      pkgver: ${{ steps.calc.outputs.pkgver }}
      pkgrel: ${{ steps.calc.outputs.pkgrel }}

    steps:
      - uses: actions/checkout@v4

      - name: Calculate new pkgrel
        id: calc
        run: |
          pv=$(grep '^pkgver=' PKGBUILD | cut -d= -f2)
          old=$(git show HEAD~1:PKGBUILD | grep '^pkgver=' | cut -d= -f2 2>/dev/null || echo "")
          if [[ "$pv" != "$old" ]]; then
            rel=1
          else
            curr=$(grep '^pkgrel=' PKGBUILD | cut -d= -f2)
            rel=$((curr + 1))
          fi
          echo "pkgver=$pv"   >> $GITHUB_OUTPUT
          echo "pkgrel=$rel"  >> $GITHUB_OUTPUT
          echo "$pv-$rel"     > .tag

      - name: Commit bump
        uses: EndBug/add-and-commit@v9
        with:
          message: "ci: bump to ${{ needs.bump.outputs.pkgver }}-${{ needs.bump.outputs.pkgrel }}"
          add: |
            PKGBUILD
            .tag

  release:
    name: Publish GitHub release
    runs-on: ubuntu-latest
    needs: bump
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: kernel-packages
          path: dist

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: linux-custom-test-${{ needs.bump.outputs.pkgver }}-${{ needs.bump.outputs.pkgrel }}
          name: Linux Custom Test ${{ needs.bump.outputs.pkgver }}-r${{ needs.bump.outputs.pkgrel }}
          body: |
            Release of linux-custom-test v${{ needs.bump.outputs.pkgver }}-r${{ needs.bump.outputs.pkgrel }}.
            Built with DKMS module support, optimized config.
            Install via pacman -U.
          files: dist/*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
